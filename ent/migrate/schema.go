// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BasketsColumns holds the columns for the "baskets" table.
	BasketsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// BasketsTable holds the schema information for the "baskets" table.
	BasketsTable = &schema.Table{
		Name:       "baskets",
		Columns:    BasketsColumns,
		PrimaryKey: []*schema.Column{BasketsColumns[0]},
	}
	// BasketLinesColumns holds the columns for the "basket_lines" table.
	BasketLinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "ticket_amount", Type: field.TypeUint},
		{Name: "price", Type: field.TypeFloat32, SchemaType: map[string]string{"mysql": "decimal(6,2)"}},
		{Name: "basket_basket_line", Type: field.TypeUUID, Nullable: true},
	}
	// BasketLinesTable holds the schema information for the "basket_lines" table.
	BasketLinesTable = &schema.Table{
		Name:       "basket_lines",
		Columns:    BasketLinesColumns,
		PrimaryKey: []*schema.Column{BasketLinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "basket_lines_baskets_BasketLine",
				Columns:    []*schema.Column{BasketLinesColumns[3]},
				RefColumns: []*schema.Column{BasketsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "date", Type: field.TypeTime},
		{Name: "basket_line_event", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "events_basket_lines_Event",
				Columns:    []*schema.Column{EventsColumns[3]},
				RefColumns: []*schema.Column{BasketLinesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BasketsTable,
		BasketLinesTable,
		EventsTable,
	}
)

func init() {
	BasketLinesTable.ForeignKeys[0].RefTable = BasketsTable
	EventsTable.ForeignKeys[0].RefTable = BasketLinesTable
}
